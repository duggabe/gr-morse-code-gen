options:
  parameters:
    author: Barry Duggan
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: Morse code generator
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: MorseGen
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Morse Code Generator
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 12.0]
    rotation: 0
    state: enabled

blocks:
- name: freq
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: ''
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '300'
    step: '100'
    stop: '2000'
    value: '800'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [440, 12.0]
    rotation: 0
    state: true
- name: repeat
  id: variable
  parameters:
    comment: ''
    value: int(1.2 * samp_rate / speed)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [352, 12.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '48000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 12.0]
    rotation: 0
    state: enabled
- name: speed
  id: variable
  parameters:
    comment: ''
    value: '13'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 12.0]
    rotation: 0
    state: true
- name: symbol_rate
  id: variable
  parameters:
    comment: ''
    value: '300'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 76.0]
    rotation: 0
    state: true
- name: volume
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: Volume
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: '0.01'
    stop: '1.0'
    value: '0.05'
    widget: slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 12.0]
    rotation: 0
    state: enabled
- name: analog_sig_source_x_0_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '0.5'
    comment: ''
    freq: freq
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: samp_rate
    type: float
    waveform: analog.GR_COS_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [80, 412.0]
    rotation: 0
    state: enabled
- name: audio_sink_0
  id: audio_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    device_name: ''
    num_inputs: '1'
    ok_to_block: 'True'
    samp_rate: '48000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [800, 436.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_0_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: Volume
    const: volume
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [336, 452.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_xx_0
  id: blocks_multiply_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [624, 424.0]
    rotation: 0
    state: enabled
- name: blocks_repeat_0
  id: blocks_repeat
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    interp: repeat
    maxoutbuf: '0'
    minoutbuf: '0'
    type: byte
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 148.0]
    rotation: 0
    state: enabled
- name: blocks_uchar_to_float_0
  id: blocks_uchar_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [576, 152.0]
    rotation: 0
    state: enabled
- name: epy_block_0_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nMorse code vector source\n\"\"\"\n\n#  epy_block_0.py\n\
      #  revised 09/10/2019 - finish code table\n#  revised 09/11/2019 - test for\
      \ bad character\n#  revised 09/27/2019 - get input from a Message Edit block\
      \ (code from Volker Schroer dl1ksv)\n\nimport numpy as np\nfrom gnuradio import\
      \ gr\n\nimport pmt\n\ntextboxValue = \"\"\n\nMorse = {\n  # codes from https://www.itu.int/rec/R-REC-M.1677-1-200910-I/en\n\
      \    \"A\": \"1,0,1,1,1\",\n    \"B\": \"1,1,1,0,1,0,1,0,1\",\n    \"C\": \"\
      1,1,1,0,1,0,1,1,1,0,1\",\n    \"D\": \"1,1,1,0,1,0,1\",\n    \"E\": \"1\",\n\
      \    \"F\": \"1,0,1,0,1,1,1,0,1\",\n    \"G\": \"1,1,1,0,1,1,1,0,1\",\n    \"\
      H\": \"1,0,1,0,1,0,1\",\n    \"I\": \"1,0,1\",\n    \"J\": \"1,0,1,1,1,0,1,1,1,0,1,1,1\"\
      ,\n    \"K\": \"1,1,1,0,1,0,1,1,1\",\n    \"L\": \"1,0,1,1,1,0,1,0,1\",\n  \
      \  \"M\": \"1,1,1,0,1,1,1\",\n    \"N\": \"1,1,1,0,1\",\n    \"O\": \"1,1,1,0,1,1,1,0,1,1,1\"\
      ,\n    \"P\": \"1,0,1,1,1,0,1,1,1,0,1\",\n    \"Q\": \"1,1,1,0,1,1,1,0,1,0,1,1,1\"\
      ,\n    \"R\": \"1,0,1,1,1,0,1\",\n    \"S\": \"1,0,1,0,1\",\n    \"T\": \"1,1,1\"\
      ,\n    \"U\": \"1,0,1,0,1,1,1\",\n    \"V\": \"1,0,1,0,1,0,1,1,1\",\n    \"\
      W\": \"1,0,1,1,1,0,1,1,1\",\n    \"X\": \"1,1,1,0,1,0,1,0,1,1,1\",\n    \"Y\"\
      : \"1,1,1,0,1,0,1,1,1,0,1,1,1\",\n    \"Z\": \"1,1,1,0,1,1,1,0,1,0,1\",\n  \
      \  \" \": \"0\",            # space\n    \"1\": \"1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1\"\
      ,\n    \"2\": \"1,0,1,0,1,1,1,0,1,1,1,0,1,1,1\",\n    \"3\": \"1,0,1,0,1,0,1,1,1,0,1,1,1\"\
      ,\n    \"4\": \"1,0,1,0,1,0,1,0,1,1,1\",\n    \"5\": \"1,0,1,0,1,0,1,0,1\",\n\
      \    \"6\": \"1,1,1,0,1,0,1,0,1,0,1\",\n    \"7\": \"1,1,1,0,1,1,1,0,1,0,1,0,1\"\
      ,\n    \"8\": \"1,1,1,0,1,1,1,0,1,1,1,0,1,0,1\",\n    \"9\": \"1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1\"\
      ,\n    \"0\": \"1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1\",\n    \".\": \"1,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1\"\
      ,          # period\n    \",\": \"1,1,1,0,1,1,1,0,1,0,1,0,1,1,1,0,1,1,1\", \
      \     # comma\n    \":\": \"1,1,1,0,1,1,1,0,1,1,1,0,1,0,1,0,1\",          #\
      \ colon\n    \"?\": \"1,0,1,0,1,1,1,0,1,1,1,0,1,0,1\",              # question\n\
      \    \"'\": \"1,0,1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,0,1\",      # apostrophe\n \
      \   \"-\": \"1,1,1,0,1,0,1,0,1,0,1,0,1,1,1\",              # dash or minus\n\
      \    \"/\": \"1,1,1,0,1,0,1,0,1,1,1,0,1\",                  # slash\n    \"\
      (\": \"1,1,1,0,1,0,1,1,1,0,1,1,1,0,1\",              # left parenthesis\n  \
      \  \")\": \"1,1,1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,1,1\",      # right parenthesis\n\
      \    \"\\\"\": \"1,0,1,1,1,0,1,0,1,0,1,1,1,0,1\",             # quote\n    \"\
      =\": \"1,1,1,0,1,0,1,0,1,0,1,1,1\",                  # equals\n    \"+\": \"\
      1,0,1,1,1,0,1,0,1,1,1,0,1\",                  # plus\n    \"@\": \"1,0,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1\"\
      ,          # at sign (@)\n  # these punctuation marks are not included in the\
      \ ITU recommendation,\n  # but are found in https://en.wikipedia.org/wiki/Morse_code\n\
      \    \"!\": \"1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1,1,1\",      # exclamation point\n\
      \    \"&\": \"1,0,1,1,1,0,1,0,1,0,1\",                      # ampersand (also\
      \ prosign for 'WAIT')\n    \";\": \"1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1\",   \
      \       # semicolon\n    \"_\": \"1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,1,1\",     \
      \     # underscore\n    \"$\": \"1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,1,1\"       \
      \    # dollar sign\n      }\n\nclass mc_sync_block(gr.sync_block):\n    \"\"\
      \"\n    reads input from a message port\n    generates a vector of Morse code\
      \ bits\n    \"\"\"\n    def __init__(self):\n        gr.sync_block.__init__(self,\n\
      \            name = \"Morse code vector source\",\n            in_sig = None,\n\
      \            out_sig = [np.byte])\n        self.message_port_register_in(pmt.intern('msg_in'))\n\
      \        self.message_port_register_out(pmt.intern('clear_input'))\n       \
      \ self.set_msg_handler(pmt.intern('msg_in'), self.handle_msg)\n\n    def handle_msg(self,\
      \ msg):\n        global textboxValue\n        textboxValue = pmt.symbol_to_string\
      \ (msg)\n        # print (textboxValue)\n    \n    def work(self, input_items,\
      \ output_items):\n        global Morse\n        global textboxValue\n      \
      \  bit_stream = \"\"\n        if (len (textboxValue) > 0):\n            for\
      \ in0 in textboxValue:\n                # get next char\n                inChar\
      \ = str (in0)\n                # convert to upper case\n                ch =\
      \ inChar.upper()\n                # test for character in table\n          \
      \      if (not(ch in Morse)):\n                # print (\"bad char\", ch)\n\
      \                    ch = \"?\"        # replace bad character with a '?'\n\
      \                # build vector\n                _dots = str (Morse.get(ch))\n\
      \                # print (ch, _dots)\n                bit_stream += (_dots +\
      \ \",0,0,0,\")    # letter space\n\n            bit_stream += \"0,0,0,0\"  \
      \  # finish with word space\n            # print (bit_stream)\n\n          \
      \  # get length of string\n            _len = len(bit_stream)\n            #\
      \ num of elements = (length+1) / 2\n            _num_elem = int((_len+1) / 2)\n\
      \n            # convert and store elements in output array\n            for\
      \ x in range (_len):\n                y = int(x / 2)\n                if (bit_stream[x]\
      \ == '1'):\n                    output_items[0][y] = 1\n                elif\
      \ (bit_stream[x] == '0'):\n                    output_items[0][y] = 0\n    \
      \            else:\n                    continue    # skip commas\n\n      \
      \      # clear input line\n            textboxValue = \"\"\n            self.message_port_pub(pmt.intern('clear_input'),\
      \ pmt.intern(''))\n        else:\n            _num_elem = 0\n\n        return\
      \ (_num_elem)\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Morse code vector source', 'mc_sync_block', [], [('msg_in', 'message',
      1)], [('0', 'byte', 1), ('clear_input', 'message', 1)], '\n    reads input from
      a message port\n    generates a vector of Morse code bits\n    ', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [96, 152.0]
    rotation: 0
    state: true
- name: qtgui_edit_box_msg_0
  id: qtgui_edit_box_msg
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    gui_hint: ''
    is_pair: 'False'
    is_static: 'True'
    key: '"text"'
    label: Input
    maxoutbuf: '0'
    minoutbuf: '0'
    type: string
    value: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [96, 228.0]
    rotation: 180
    state: true
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'True'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '2'
    size: '16384'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.5'
    tr_mode: qtgui.TRIG_MODE_AUTO
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1.5'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [776, 292.0]
    rotation: 0
    state: enabled
- name: root_raised_cosine_filter_0
  id: root_raised_cosine_filter
  parameters:
    affinity: ''
    alias: ''
    alpha: '0.35'
    comment: ''
    decim: '1'
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    ntaps: '200'
    samp_rate: samp_rate
    sym_rate: symbol_rate
    type: fir_filter_fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [760, 108.0]
    rotation: 0
    state: true
- name: root_raised_cosine_filter_0_0
  id: root_raised_cosine_filter
  parameters:
    affinity: ''
    alias: ''
    alpha: '0.35'
    comment: ''
    decim: '1'
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    ntaps: '200'
    samp_rate: samp_rate
    sym_rate: symbol_rate
    type: fir_filter_fff
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [376, 252.0]
    rotation: 0
    state: true
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: rrc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 244.0]
    rotation: 180
    state: true
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: rrc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [376, 380.0]
    rotation: 180
    state: true

connections:
- [analog_sig_source_x_0_0, '0', blocks_multiply_const_vxx_0_0, '0']
- [blocks_multiply_const_vxx_0_0, '0', blocks_multiply_xx_0, '1']
- [blocks_multiply_xx_0, '0', audio_sink_0, '0']
- [blocks_multiply_xx_0, '0', qtgui_time_sink_x_0, '1']
- [blocks_repeat_0, '0', blocks_uchar_to_float_0, '0']
- [blocks_uchar_to_float_0, '0', root_raised_cosine_filter_0, '0']
- [epy_block_0_0, '0', blocks_repeat_0, '0']
- [epy_block_0_0, clear_input, qtgui_edit_box_msg_0, val]
- [qtgui_edit_box_msg_0, msg, epy_block_0_0, msg_in]
- [root_raised_cosine_filter_0, '0', virtual_sink_0, '0']
- [root_raised_cosine_filter_0_0, '0', blocks_multiply_xx_0, '0']
- [root_raised_cosine_filter_0_0, '0', qtgui_time_sink_x_0, '0']
- [virtual_source_0, '0', root_raised_cosine_filter_0_0, '0']

metadata:
  file_format: 1
